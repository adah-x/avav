using System;

namespace AVAVLib
{
	/// <summary>
	/// Gültigkeit und Zweck einer Adresse, zur Serialisierung eindeutig über
	/// Person.Avid und Address.Adid zu identifizieren. Für jede Kombination
	/// aus Person.Avid und Address.Adid ist stets nur die jüngest nicht schwebende
	/// gültig.
	/// Jede Änderung erzeugt einen neuen Datensatz.
	/// </summary>
	public class AddressValidity
	{
		/// <summary>
		/// Generated by Framework/DB for reference use Adid
		/// </summary>
		public int AddressValidityId { get; set; }
		/// <summary>
		/// Systemzeitstempel, wir verwendet um den jüngsten Stand als
		/// aktuellen Stand zu identifizieren.
		/// </summary>
		public DateTime TimeStamp { get; set; } = DateTime.Now;
		/// <summary>
		/// Beginn des Zeitraumes in dem die Addresse gültig ist.
		/// </summary>
		public DateTime? ValidFrom { get; set; } = DateTime.MinValue;
		/// <summary>
		/// Ende des Zeitraumes in dem die Addresse gülig ist.
		/// </summary>
		public DateTime? ValidTill { get; set; } = DateTime.MaxValue;
		/// <summary>
		/// Art der Addresse (kann auch Arbeitgeber sein.)
		/// </summary>
		public AddressValidityType AddressValidityType { get; set; } = AddressValidityType.Other;

		/// <summary>
		/// Zeigt an, ob der Datensatz schwebt oder schon von einem Schriftwart übernommen wurde.
		/// </summary>
		public bool Valid { get; set; } = false;
		/// <summary>
		/// Person an der diese Gültigkeitsbeschreibung hängt, wohnen zwei Personen an der gleichen
		/// Adresse, gibt es eine Addresse aber zwei Gültigkeiten. (Kann ja sein, dass einer früher
		/// oder später ein- oder auszieht.)
		///
		/// Person.Avid ist ein Teil des globalen Schlüssels
		/// </summary>
		public Person Person { get; set; }
		/// <summary>
		/// Die Adresse
		///
		/// Address.Adid ist ein Teil des globalen Schlüssels
		/// </summary>
		public Address Address { get; set; }
		/// <summary>
		/// Zeigt an, ob alle Bundesgeschwister diese Adresse sehen können sollen.
		/// </summary>
		public bool Visible { get; set; } = false;

		/// <summary>
		/// Änderungsbeschreibung für genau diese Änderung. (Jede Änderung ist ein Datensatz.)
		/// </summary>
		public ChangeHandle ChangeHandle { get; set; }
		/// <summary>
		/// Zeigt an, ob dies die offizielle Addresse ist, an die z.B. Einladungen bei
		/// Satzungsänderungen gehen.
		///
		/// In der Datenbank sollten mehrere gesetzt werden können. Der Datenprüfer sollte
		/// sicherstellen, dass es nur einen gibt.
		/// </summary>
		public bool OfficialPost { get; set; }
		/// <summary>
		/// Zeigt an, ob dies die Addresse ist, an die das MTB geht.
		///
		/// Mitteilungsblatt --> Keine gesetzt --> Nur Mail
		/// </summary>
		public bool Newsletter { get; set; }
	}
}