using System.Collections.Generic;

namespace AVAVLib
{
	/// <summary>
	/// Person sind im Sinne der AVAV alle bekannten Personen, also auch StuGis, Ehepartner,
	/// Fördermitglieder etc.
	///
	/// Die Person hat eine fest AVID, die eigentlichen Personendaten werdem in Datensätzen
	/// PersonData gehalten. Jeder Änderung der Personendaten erzeugt einen neuen Datensatz vom
	/// Type PersonData.
	/// </summary>
	public partial class Person
	{
		#region Technical

		/// <summary>
		/// Generated by Framework/DB for reference use AVID
		/// </summary>
		public int PersonId { get; set; }

		/// <summary>
		/// Access Token to avoid username password hassle
		/// </summary>
		public string AccessToken { get; set; }
		/// <summary>
		/// General unique and stable id
		/// </summary>
		public string Avid { get; set; }

		#endregion

		#region Flexible Data


		/// <summary>
		/// Personendatensatz mit Zeitstempel und Gültigkeit
		/// </summary>
		public ICollection<PersonData> PersonData { get; set; } = new List<PersonData>();

		/// <summary>
		/// Addressen mit Gültigkeiten
		/// </summary>
		public ICollection<AddressValidity> Addresses { get; set; } = new List<AddressValidity>();

		/// <summary>
		/// Bilder der Person 
		/// </summary>
		public ICollection<Image> Images { get; set; } = new List<Image>();

		/// <summary>
		/// Statusänderungen der Person
		/// </summary>
		public ICollection<Status> Status { get; set; } = new List<Status>();

		#endregion
		/// <summary>
		/// Gibt den DisplayName der Person zurück. Hilft beim Debuggen.
		/// </summary>
		/// <returns>DisplayName der Person</returns>
		public override string ToString()
		{
			return DisplayName;
		}
	}
}