<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AVAVLib</name>
    </assembly>
    <members>
        <member name="T:AVAVLib.Address">
             <summary>
             Addresse hat ähnlich zur Person eine eigene Identität, denn bei
             Korrekturen sollen alle Verwendungen einer Addresse korrigiert werden.
            
             Die verschiedenen Änderungsstände einer Addresse bzw. deren Attribute
             liegen jeweils in AddressVersions
             </summary>
        </member>
        <member name="P:AVAVLib.Address.AddressId">
            <summary>
            Generated by Framework/DB for reference use Adid
            </summary>
        </member>
        <member name="P:AVAVLib.Address.Adid">
            <summary>
            Kann zur Serialisierung verwendet werden
            </summary>
        </member>
        <member name="P:AVAVLib.Address.AddressVersions">
            <summary>
            Versionen der Addresse, Änderungsstände
            </summary>
        </member>
        <member name="P:AVAVLib.Address.ValidVersion">
            <summary>
            Sample Code um die aktuell gültige Version zu bekommen.
            </summary>
        </member>
        <member name="P:AVAVLib.Address.LatestVersion">
            <summary>
            Sample Code um die letzte Version zu bekommen. Ist diese vom Mitglied eingegeben,
            ist sie schwebend und unterscheidet sich von der letzten gültigen Version.
            </summary>
        </member>
        <member name="T:AVAVLib.AddressValidity">
            <summary>
            Gültigkeit und Zweck einer Adresse, zur Serialisierung eindeutig über
            Person.Avid und Address.Adid zu identifizieren. Für jede Kombination
            aus Person.Avid und Address.Adid ist stets nur die jüngest nicht schwebende
            gültig.
            Jede Änderung erzeugt einen neuen Datensatz.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.AddressValidityId">
            <summary>
            Generated by Framework/DB for reference use Adid
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.TimeStamp">
            <summary>
            Systemzeitstempel, wir verwendet um den jüngsten Stand als
            aktuellen Stand zu identifizieren.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.ValidFrom">
            <summary>
            Beginn des Zeitraumes in dem die Addresse gültig ist.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.ValidTill">
            <summary>
            Ende des Zeitraumes in dem die Addresse gülig ist.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.AddressValidityType">
            <summary>
            Art der Addresse (kann auch Arbeitgeber sein.)
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.Valid">
            <summary>
            Zeigt an, ob der Datensatz schwebt oder schon von einem Schriftwart übernommen wurde.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.Person">
             <summary>
             Person an der diese Gültigkeitsbeschreibung hängt, wohnen zwei Personen an der gleichen
             Adresse, gibt es eine Addresse aber zwei Gültigkeiten. (Kann ja sein, dass einer früher
             oder später ein- oder auszieht.)
            
             Person.Avid ist ein Teil des globalen Schlüssels
             </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.Address">
             <summary>
             Die Adresse
            
             Address.Adid ist ein Teil des globalen Schlüssels
             </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.Visible">
            <summary>
            Zeigt an, ob alle Bundesgeschwister diese Adresse sehen können sollen.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.ChangeHandle">
            <summary>
            Änderungsbeschreibung für genau diese Änderung. (Jede Änderung ist ein Datensatz.)
            </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.OfficialPost">
             <summary>
             Zeigt an, ob dies die offizielle Addresse ist, an die z.B. Einladungen bei
             Satzungsänderungen gehen.
            
             In der Datenbank sollten mehrere gesetzt werden können. Der Datenprüfer sollte
             sicherstellen, dass es nur einen gibt.
             </summary>
        </member>
        <member name="P:AVAVLib.AddressValidity.Newsletter">
             <summary>
             Zeigt an, ob dies die Addresse ist, an die das MTB geht.
            
             Mitteilungsblatt --> Keine gesetzt --> Nur Mail
             </summary>
        </member>
        <member name="T:AVAVLib.AddressValidityType">
            <summary>
            Art der Adresse oder Arbeitgebers
            </summary>
        </member>
        <member name="F:AVAVLib.AddressValidityType.Home">
            <summary>
            Addresse der Eltern während des Studiums
            </summary>
        </member>
        <member name="F:AVAVLib.AddressValidityType.Main">
            <summary>
            Hauptwohnsitz
            </summary>
        </member>
        <member name="F:AVAVLib.AddressValidityType.Other">
            <summary>
            Nebenwohnsitz
            </summary>
        </member>
        <member name="F:AVAVLib.AddressValidityType.Employer">
            <summary>
            Arbeitgeber
            </summary>
        </member>
        <member name="F:AVAVLib.AddressValidityType.Temporary">
            <summary>
            Zeitlich begrenzt
            </summary>
        </member>
        <member name="T:AVAVLib.AddressVersion">
            <summary>
            Version einer Addresse
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.AddressVersionId">
            <summary>
            Generated by Framework/DB for reference use Address.Adid
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.TimeStamp">
            <summary>
            Systemzeitstempel, wir verwendet um den jüngsten Stand als
            aktuellen Stand zu identifizieren.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.Valid">
            <summary>
            Zeigt an, ob die Adresse gültig oder schwebend ist.
            Ist die Adresse vom Mitglied eingegeben, aber nicht vom
            Schriftwart übernommen, bleigt sie schwebend.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.Address">
            <summary>
            Adresse zu der diese Version gehört.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.Name">
            <summary>
            Name der Adresse, da Arbeitgeber auch nur Adressen sind, ist dieses Feld
            für den Firmennamen vorgesehen.
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.ChangeHandle">
            <summary>
            Änderungsbeschreibung für genau diese Änderung. (Jede Änderung ist ein Datensatz.)
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.IsLandLineVisible">
            <summary>
            Können meine Bundesgeschwister die Telefonummer zu dieser Addresse sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.LandLine">
            <summary>
            Festnetztelefon zu dieser Adresse
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.IsFaxVisible">
            <summary>
            Können meine Bundesgeschwister die Faxnummer zu dieser Addresse sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.Fax">
            <summary>
            Faxnummer zu dieser Adresse
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.Street">
            <summary>
            Straße
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.PostCode">
            <summary>
            Postleitzahl
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.City">
            <summary>
            Stadt
            </summary>
        </member>
        <member name="P:AVAVLib.AddressVersion.CountryCode">
            <summary>
            Ländercode (Post)
            </summary>
        </member>
        <member name="T:AVAVLib.Authority">
            <summary>
            Mögliche Zuständigkeiten bei der Verwaltung
            </summary>
        </member>
        <member name="F:AVAVLib.Authority.Aktivitas">
            <summary>
            Zuständigkeit Aktivitas
            </summary>
        </member>
        <member name="F:AVAVLib.Authority.Adah">
            <summary>
            Zuständigkeit ADAHschaft
            </summary>
        </member>
        <member name="T:AVAVLib.ChangeHandle">
            <summary>
            Im ChangeHandle speichern wir die Informationen, die der Schriftwart zum Grund der Änderung
            erfasst hat.
            </summary>
        </member>
        <member name="T:AVAVLib.Extensions">
            <summary>
            Ein paar Helferlein um String einfacher zusammenzustöpseln
            </summary>
        </member>
        <member name="M:AVAVLib.Extensions.AppendTokenCond(System.Text.StringBuilder,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Hängt ein Datum mit Präfix und Suffix an einen StringBuilder,
            wenn das Datum nicht leer ist und eine Bedingung erfüllt ist.
            </summary>
            <param name="sb">Der Stringbuilder an den angehängt wird.</param>
            <param name="condition">Die Bedinung, die erfüllt sein muss.</param>
            <param name="prefix">Das Prefix, welche im Falle des Anhängens dem Datum vorangestellt wird.</param>
            <param name="value">Das Datum, welches angehängt werden soll.</param>
            <param name="postfix">Das Suffix, welche im Falle des Anhängens dem Datum angehängt wird.</param>
        </member>
        <member name="M:AVAVLib.Extensions.AppendToken(System.Text.StringBuilder,System.String,System.String,System.String)">
            <summary>
            Hängt ein Datum mit Präfix und Suffix an einen StringBuilder,
            wenn das Datum nicht leer ist.
            </summary>
            <param name="sb">Der Stringbuilder an den angehängt wird.</param>
            <param name="prefix">Das Prefix, welche im Falle des Anhängens dem Datum vorangestellt wird.</param>
            <param name="value">Das Datum, welches angehängt werden soll.</param>
            <param name="postfix">Das Suffix, welche im Falle des Anhängens dem Datum angehängt wird.</param>
        </member>
        <member name="M:AVAVLib.Extensions.Wrap(System.String,System.String)">
            <summary>
            Schließt einen String in zwei Tokens ein.
            </summary>
            <param name="str">Der String</param>
            <param name="token">Das Token</param>
            <returns>token+str+token</returns>
        </member>
        <member name="T:AVAVLib.Gender">
            <summary>
            Mögliche Geschlechter entsprechend der aktuellen Empfehlung
            </summary>
        </member>
        <member name="F:AVAVLib.Gender.Male">
            <summary>
            Männlich
            </summary>
        </member>
        <member name="F:AVAVLib.Gender.Female">
            <summary>
            Weiblich
            </summary>
        </member>
        <member name="F:AVAVLib.Gender.Diverse">
            <summary>
            Zu einem anderen Geschlecht gehörend.
            </summary>
        </member>
        <member name="F:AVAVLib.Gender.NotGiven">
            <summary>
            Möchte keine Angaben bezüglich einer Geschlechterzuordnung machen.
            </summary>
        </member>
        <member name="F:AVAVLib.Gender.Unknown">
            <summary>
            Das Geschlecht ist unbekannt.
            </summary>
        </member>
        <member name="T:AVAVLib.Image">
            <summary>
            Bild, enthält nur die Metadaten und einen Handle für den Store
            das einfachste sicher hier nur den relativen Pfand reinzuhängen,
            z.B. in der Form /AVID/Image1.jpg
            </summary>
        </member>
        <member name="P:AVAVLib.Image.Person">
            <summary>
            Person auf dem Bild
            </summary>
        </member>
        <member name="P:AVAVLib.Image.Visible">
            <summary>
            Ist das Bild für meine Bundesgeschwister sichtbar
            </summary>
        </member>
        <member name="P:AVAVLib.Image.Taken">
            <summary>
            Datum der Aufnahme
            </summary>
        </member>
        <member name="P:AVAVLib.Image.StoreHandle">
            <summary>
            Irgendeine Referenz auf die Datei, z.B. ein Pfad.
            </summary>
        </member>
        <member name="P:AVAVLib.Image.MimeType">
            <summary>
            MimeType
            </summary>
        </member>
        <member name="P:AVAVLib.Image.Size">
            <summary>
            Größe der Datei
            </summary>
        </member>
        <member name="P:AVAVLib.Image.Hash">
            <summary>
            Hash der Datei
            </summary>
        </member>
        <member name="T:AVAVLib.Person">
             <summary>
             Person sind im Sinne der AVAV alle bekannten Personen, also auch StuGis, Ehepartner,
             Fördermitglieder etc.
            
             Die Person hat eine fest AVID, die eigentlichen Personendaten werdem in Datensätzen
             PersonData gehalten. Jeder Änderung der Personendaten erzeugt einen neuen Datensatz vom
             Type PersonData.
             </summary>
        </member>
        <member name="P:AVAVLib.Person.PersonId">
            <summary>
            Generated by Framework/DB for reference use AVID
            </summary>
        </member>
        <member name="P:AVAVLib.Person.AccessToken">
            <summary>
            Access Token to avoid username password hassle
            </summary>
        </member>
        <member name="P:AVAVLib.Person.Avid">
            <summary>
            General unique and stable id
            </summary>
        </member>
        <member name="P:AVAVLib.Person.PersonData">
            <summary>
            Personendatensatz mit Zeitstempel und Gültigkeit
            </summary>
        </member>
        <member name="P:AVAVLib.Person.Addresses">
            <summary>
            Addressen mit Gültigkeiten
            </summary>
        </member>
        <member name="P:AVAVLib.Person.Images">
            <summary>
            Bilder der Person 
            </summary>
        </member>
        <member name="P:AVAVLib.Person.Status">
            <summary>
            Statusänderungen der Person
            </summary>
        </member>
        <member name="M:AVAVLib.Person.ToString">
            <summary>
            Gibt den DisplayName der Person zurück. Hilft beim Debuggen.
            </summary>
            <returns>DisplayName der Person</returns>
        </member>
        <member name="M:AVAVLib.Person.IsVisibleStatus(AVAVLib.StatusType,AVAVLib.StatusChangeType)">
            <summary>
            Sample Code - Ermittelt, ob ein bestimmter Status für alle sichtbar sein soll.
            </summary>
            <param name="statusType">Status, der geprüft werden soll.</param>
            <param name="changeType">Statusänderungsrichtung</param>
            <returns>true für sichtbar</returns>
        </member>
        <member name="M:AVAVLib.Person.StatusDate(AVAVLib.StatusType,AVAVLib.StatusChangeType)">
            <summary>
            Sample Code - Ermittelt, das letzte Datum einer Statusänderung
            </summary>
            <param name="statusType">Status, der geprüft werden soll.</param>
            <param name="changeType">Statusänderungsrichtung</param>
            <returns>Das Datum der Änderung</returns>
        </member>
        <member name="P:AVAVLib.Person.ValidData">
            <summary>
            Sample Code um die aktuell gültige Version zu bekommen.
            </summary>
        </member>
        <member name="P:AVAVLib.Person.LatestData">
            <summary>
            Sample Code um die letzte Version zu bekommen. Ist diese vom Mitglied eingegeben,
            ist sie schwebend und unterscheidet sich von der letzten gültigen Version.
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayAddresses">
            <summary>
            Sample Code zur Ermittlung der sichtbaren Addressen. Diese sind stets nur die gültigen.
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayPostCodes">
            <summary>
            Sample Code zur Ermittlung der sichtbaren Postleitzahlen.
            Wird zur Erstellung der nach Postleitzahlen sortierten Übersicht
            im MV verwendet.
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayName">
            <summary>
            Sample Code - Shortcut zum gültigen vollständigen Namen
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayShortName">
            <summary>
            Sample Code - Shortcut zum gültigen kurzen Namen
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayInternalWithEMails">
            <summary>
            Sample Code - Shortcut zur internen Darstellung mit EMail-Adressen
            </summary>
        </member>
        <member name="P:AVAVLib.Person.DisplayInternal">
            <summary>
            Sample Code - Shortcut zur internen Darstellung
            </summary>
        </member>
        <member name="P:AVAVLib.Person.FieldsOfStudies">
            <summary>
            Sample Code - Ermittelt die Studiengänge
            </summary>
        </member>
        <member name="P:AVAVLib.Person.StartOfStudies">
            <summary>
            Sample Code - Ermittelt den Studienbeginn
            </summary>
        </member>
        <member name="P:AVAVLib.Person.EndOfStudies">
            <summary>
            Sample Code - Ermittelt das Studienende
            </summary>
        </member>
        <member name="P:AVAVLib.Person.Employers">
            <summary>
            Sample Code - Ermittelt die aktuellen Arbeitgeber
            </summary>
        </member>
        <member name="P:AVAVLib.Person.VisibleEmployers">
            <summary>
            Sample Code - Ermittelt die aktuellen sichtbaren Arbeitgeber
            </summary>
        </member>
        <member name="P:AVAVLib.Person.IsAlive">
            <summary>
            Sample Code - Ermittel den Lebendstatus der Person
            </summary>
        </member>
        <member name="P:AVAVLib.Person.IsMemberYoungDateVisible">
            <summary>
            Sample Code - Ermittelt ob alle das Eintrittsdatum als Jumi sehen dürfen.
            </summary>
        </member>
        <member name="P:AVAVLib.Person.MemberYoungDate">
            <summary>
            Sample Code - Ermittelt das Eintrittsdatum als Jumi
            </summary>
        </member>
        <member name="T:AVAVLib.PersonData">
            <summary>
            Version eines Datensatzes zu einer Person, bei Änderungen werden immer neue Versionen erstellt,
            der laut Zeitstempel letzte gültige (valid) Datensatz ist der aktuelle Stand.
            Mitglieder können schwebende Datensätze anlegen, bei diesen ist dann valid=false
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Valid">
            <summary>
            Zeigt an, ob der Datensatz schwebt oder schon von einem Schriftwart übernommen wurde.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.TimeStamp">
            <summary>
            Zeitpunkt der Erstellung
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.ChangeHandle">
            <summary>
            Only one handle, since changes are stored in new Person Records 
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Person">
            <summary>
            Person zu der die Datensatzversion gehört
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Gender">
            <summary>
            Geschlechtliche Identität
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.PrefixTitle">
            <summary>
            Akademische Grade, die vor den Namen gestellt werden.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.SuffixTitle">
            <summary>
            Akademische Grade, die hinter den Namen gestellt werden.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.StaatsexamenProfession">
            <summary>
            Staatsexamen oder sonstige Berufsabschlüsse. Die Lehrer legen da Wert drauf,
            denn die bekommen kein Diplom und sind dann irgendwann Studienrat oder so was.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.GivenNamePrefix">
            <summary>
            Präfix für einen Vornamen, z.B. De Witt, würde nach Witt einsortiert, weil De ein Präfix ist.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.GivenName">
            <summary>
            Erster Vorname
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.AdditionalNames">
            <summary>
            Weitere Vornamen
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.NamePrefix">
            <summary>
            Präfix zum Familiennamen, z.B. von --> Sortierung
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Name">
            <summary>
            Familienname
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.NameSuffix">
            <summary>
            Anhang zum Familiennamen, z.B. sen., jun., III.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.MaidenName">
            <summary>
            Geburtsname
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Nickname">
            <summary>
            Biername
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsEMailOfficialVisible">
            <summary>
            Sollen alle Bundesgeschwister die offizielle EMail-Addresse sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.EMailOfficial">
            <summary>
            Offizielle EMail-Address, z.B. zur Verwendung bei Einladungen zur MV
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsEMailStuffVisible">
            <summary>
            Sollen alle Bundesgeschwister die zusätzliche EMail-Addresse sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.EMailStuff">
            <summary>
            EMail-Adresse für Verteiler.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsBirthdayVisible">
            <summary>
            Sollen alle Bundesgeschwister meinen Geburtstag sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Birthday">
            <summary>
            Geburtstag
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DateOfDeath">
            <summary>
            Todestage --> Ist Nullable, d.h. IsAlive oder Kenner für Verstorben sollten immer
            aus diesem Datum abgeleitet werden.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsBirthPlaceVisible">
            <summary>
            Sollen alle Bundesgeschwister meinen Geburtsort sehen können?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.BirthPlace">
            <summary>
            Geburtsort
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsAvColonyVisible">
            <summary>
            Sollen alle Bundesgeschwister meine AV-Kolonie sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.AvColony">
            <summary>
            AV-Kolonie
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsMobilTelOffcialVisible">
            <summary>
            Sollen alle Bundesgeschwister meine offizielle Mobil-Telefonummer sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.MobilTelOfficial">
            <summary>
            Offzielle Mobil-Telefonnummer
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsMobilTelAdd1Visible">
            <summary>
            Sollen alle Bundesgeschwister meine 1. zusätzliche Mobil-Telefonummer sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.MobilTelAdd1">
            <summary>
            1. zusätzliche Mobilfunknummer
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsMobilTelAdd2Visible">
            <summary>
            Sollen alle Bundesgeschwister meine 2. zusätzliche Mobil-Telefonummer sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.MobilTelAdd2">
            <summary>
            2. zusätzliche Mobilfunknummer
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.IsWebSiteVisible">
            <summary>
            Sollen alle Bundesgeschwister meine web-Site sehen?
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.WebSite">
            <summary>
            Web-Site
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.Authority">
            <summary>
            Zuständigkeit (Verwaltung des Datensatzes)
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DebitNummer">
            <summary>
            Debitorennummer -- sollten wir eigentlich rauswerfen und nur noch die AVID verwenden.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.BirthdayInYear">
            <summary>
            Geburtstag im Jahr, Beispielcode für die Sortierte Darstellung im Mitgliederverzeichnis
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DisplayName">
            <summary>
            Sample Code - Vollständiger Name der Person
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DisplayShortName">
            <summary>
            Sample Code - Kurzer Name der Person zur Anzeige
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.EMails">
            <summary>
            Sample Code, ermittelt die EMail-Addressen als Liste.
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DisplayInternalWithEMails">
            <summary>
            Sample Code - Interner Anzeigename der Person mit EMails
            </summary>
        </member>
        <member name="P:AVAVLib.PersonData.DisplayInternal">
            <summary>
            Sample Code - Interner Anzeigename der Person
            </summary>
        </member>
        <member name="T:AVAVLib.Relation">
             <summary>
             Person zu Person Relation mit Gültigkeit
            
             Für die Serialisierung eindeutig über From.AVID und To.AVID beschreibbar.
            
             Gültig ist immer nur der Jüngste Datensatz.
            
             Inkonsistenzen sollte nur der zeitversetzte Validator prüfen.
             z.B. Geschwister in beide Richungen
             Enkel und Großelter jeweils in entgegensetzter Richtung.
             </summary>
        </member>
        <member name="P:AVAVLib.Relation.From">
            <summary>
            Ausgangpunkt
            </summary>
        </member>
        <member name="P:AVAVLib.Relation.To">
            <summary>
            Zielpunkt
            </summary>
        </member>
        <member name="P:AVAVLib.Relation.TimeStamp">
            <summary>
            TimeStamp mit der Systemzeit zum Erstellungszeitpunkt.
            </summary>
        </member>
        <member name="P:AVAVLib.Relation.ValidFrom">
            <summary>
            Gültig von
            </summary>
        </member>
        <member name="P:AVAVLib.Relation.ValidTill">
            <summary>
            Gültig bis
            </summary>
        </member>
        <member name="P:AVAVLib.Relation.ChangeHandle">
            <summary>
            Änderungsbeschreibung für genau diese Änderung. (Jede Änderung ist ein Datensatz.)
            </summary>
        </member>
        <member name="T:AVAVLib.RelationType">
            <summary>
            Bezieungen zwischen Personen
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.Sibling">
            <summary>
            Geschwister
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.Parent">
            <summary>
            Elternteil
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.Child">
            <summary>
            Kind
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.GrandParent">
            <summary>
            Großelternteil
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.GrandChild">
            <summary>
            Enkelkind
            </summary>
        </member>
        <member name="F:AVAVLib.RelationType.Partner">
            <summary>
            Lebenspartner
            </summary>
        </member>
        <member name="T:AVAVLib.Status">
            <summary>
            Für die vielen verschiedenen Status, die eine Person im AV haben kann, wir ein persönlicher
            Trail geschrieben, jede Statusänderung ist dabei eine Datensatz, so können als Zustände
            (z.B. ist Bundesgeschwister, ist AH, ist JuMi) aus der geordneten Liste der Statusübergänge
            abgeleitet werden.
            </summary>
        </member>
        <member name="P:AVAVLib.Status.StatusChangeType">
            <summary>
            Beginnt oder endet der Status.
            </summary>
        </member>
        <member name="P:AVAVLib.Status.StatusType">
            <summary>
            Welcher Status beginnt oder endet
            </summary>
        </member>
        <member name="P:AVAVLib.Status.Visible">
            <summary>
            Können meine Bundegeschwister diese Statusänderung sehen.
            </summary>
        </member>
        <member name="P:AVAVLib.Status.Person">
            <summary>
            Für welche Person gilt die Statusänderung.
            </summary>
        </member>
        <member name="P:AVAVLib.Status.TimeStamp">
            <summary>
            TimeStamp der Zeitpunkt zu dem der Datensatz erstellt wird.
            Achtung: Gültig ist bezogen auf einen Statustyp immer der
            jüngste Datensatz, weil dieser die letzte Änderung angibt.
            </summary>
        </member>
        <member name="P:AVAVLib.Status.Date">
            <summary>
            Zeitpunkt zu der die Statusänderung eingetreten ist, beachte TimeStamp
            </summary>
        </member>
        <member name="P:AVAVLib.Status.ChangeHandle">
            <summary>
            Änderungsbeschreibung für genau diese Änderung. (Jede Änderung ist ein Datensatz.)
            </summary>
        </member>
        <member name="P:AVAVLib.Status.Text">
            <summary>
            Text zur Statusänderung, Aufnahme und Beendigung eines Studiums sind auch Status
            hier steht dann der Studiengang drin.
            </summary>
        </member>
        <member name="T:AVAVLib.StatusChangeType">
            <summary>
            Richtungsanzeige für eine Statusänderung,
            Beginnt der Status mit dem Eintrag (z.B. Eintritt)
            oder endet dieser (z.B. Übertritt in ADAHschaft)
            </summary>
        </member>
        <member name="F:AVAVLib.StatusChangeType.Start">
            <summary>
            Status beginnt
            </summary>
        </member>
        <member name="F:AVAVLib.StatusChangeType.End">
            <summary>
            Status endet
            </summary>
        </member>
        <member name="T:AVAVLib.StatusType">
             <summary>
             Mögliche Statusänderungen im AV
            
             Offene Punkte:
            
             Ist eine Unterscheidung ADAH und Student im AVeV nötig?
             Gibt es Fördermitglieder nur in der HG?
             Was ist der Ex-Aktive? Reicht dazu das Ende des Aktivenstatus?
             </summary>
        </member>
        <member name="F:AVAVLib.StatusType.FieldOfStudy">
            <summary>
            Aufnahme eines Studium in einem Studiengang
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberVerkehrsgast">
            <summary>
            Verkehrsgast
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberYoung">
            <summary>
            JuMi
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberAktivitas">
            <summary>
            VoMi
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberAvStudent">
            <summary>
            Studentisches Mitglied im AVeV
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberAvFull">
            <summary>
            Mitglied im AVeV 
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberHgStudent">
            <summary>
            Studentisches Mitglied in der HG
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberHgFull">
            <summary>
            Mitglied der HG
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberHgShares">
            <summary>
            Anteilsscheine gekauft
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberHgSustaining">
            <summary>
            Beisitzer im Vorstand der HG
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberGav">
            <summary>
            Mitglied der GAV
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.MemberHonorary">
            <summary>
            Ehrenmitglied
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.StuGi">
            <summary>
            Als StuGi aufs Haus gezogen
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Active1X">
            <summary>
            1x der Aktivitas
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Acitve2X">
            <summary>
            2x der Aktivitas
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Active3X">
            <summary>
            3x der Aktivitas
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.ActiveKw">
            <summary>
            Kassenwart der Aktivitas
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Adah1X">
            <summary>
            1x AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Adah2X">
            <summary>
            2x AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.AdahSw">
            <summary>
            Schriftführer AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.AdahKw">
            <summary>
            Kassenwart AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.AdahAssoc">
            <summary>
            Beisitzer im Vorstand AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Chronicler">
            <summary>
            Chronist
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Adah">
            <summary>
            Alte Dame, Alter Herr
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Hg1X">
            <summary>
            1. Vorsitzender Hausgesellschaft AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Hg2X">
            <summary>
            2. Vorsitzender Hausgesellschaft AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.HgKw">
            <summary>
            Kassenwart Hausgesellschaft AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.HgStud">
            <summary>
            Studentisches Mitglied im Vorstand der Hausgesellschaft AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.HgAssoc">
            <summary>
            Beisitzer im Vorstand der Hausgesellschaft AV e.V.
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.Gav1X">
            <summary>
            1. Vorsitzender GAV
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.GavHw">
            <summary>
            Hauswart der GAV
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.GavKw">
            <summary>
            Kassenwart der GAV
            </summary>
        </member>
        <member name="F:AVAVLib.StatusType.GavAssoc">
            <summary>
            Beisitzer im Vorstand der GAV
            </summary>
        </member>
    </members>
</doc>
